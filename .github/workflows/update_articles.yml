name: ToughNews

on:
  schedule:
    - cron: "0 * * * *"   # every hour
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run ToughNews
        run: python ToughNews.py

      - name: Force shown=false for only new articles
        run: |
          python - <<'PYCODE'
          import json, pathlib, hashlib

          path = pathlib.Path("archive.json")
          if not path.exists():
              raise SystemExit("archive.json not found")

          # Load current archive
          current = json.loads(path.read_text(encoding="utf-8"))

          # Use a unique key to track articles (title+link hash for safety)
          def key(article):
              return hashlib.sha1((article.get("title","") + article.get("link","")).encode()).hexdigest()

          # Load previous version from git (before ToughNews.py ran)
          import subprocess
          try:
              prev_text = subprocess.check_output(["git", "show", "HEAD:archive.json"]).decode()
              prev = json.loads(prev_text)
          except Exception:
              prev = []

          prev_map = {key(a): a for a in prev}
          updated = []

          for a in current:
              k = key(a)
              if k in prev_map:
                  # Keep whatever "shown" was already
                  a["shown"] = prev_map[k].get("shown", False)
              else:
                  # New article â†’ force false
                  a["shown"] = False
              updated.append(a)

          path.write_text(json.dumps(updated, indent=2, ensure_ascii=False), encoding="utf-8")
          PYCODE


      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add archive.json
          git commit -m "Update archive.json with new articles" || echo "No changes"
          git push
